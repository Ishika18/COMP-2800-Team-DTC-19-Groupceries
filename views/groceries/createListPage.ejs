<!-- SS - create new grocery item page. -->
<%- include('../partials/appNavbar.ejs'); -%>
<script src="/js/mainPage.js"></script>
<link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css" />
<script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
<script src="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script>
<link rel="stylesheet" type="text/css" href=/css/style.css>
<script src="http://code.jquery.com/jquery-latest.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.js"></script>


<div class="container" style="margin-top: 20px">
    <div class="row">
    <div class="col-lg-3">
    <h3>Shopping Lists</h3><hr>
       <div id="myLists">
           <button id="myLists" class="btn collapsible">My Lists</button>
           <ul id="lists" class="collapse">
                <p>My List</p>
                <p>List 2</p>
                <p>List 3</p>
           </ul>
        </div>
        <div id="friendLists">
            <button id="friendLists" class="btn collapsible">Friends' Lists</button>
            <div class="collapse">
            <ul id="shagun" class="collapsible">Shagun's Lists</ul>
                <p class="collapse">List 1</p>
            <ul id="ronald" class="collapsible">Ronald's Lists</ul>
                <p class="collapse">List 1</p>
            <ul id="eric" class="collapsible">Eric's Lists</ul>
                <p class="collapse">List 1</p>
           </ul>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
                  
        <div id="listArea">
            <div id="buttons">
                <h2 id="listTitle">My List</h2>
                <button id="newItem" type="button">New Item</button>
            </div>
            <div id="groceryList">
            </div>
    </div>
    </div>
    <div class="col-lg-3" id="listActions">
        <h3>List Actions</h3><hr><br>
        <ul>
            <label for="readyToggle">Mark as Ready For Purchase</label>
            <input id="readyToggle" type="checkbox" data-role="flipswitch" name="flip-checkbox-2" id="flip-checkbox-2" data-on-text="Ready" data-off-text="Not Ready" data-wrapper-class="custom-size-flipswitch"><br>
            <label for="readyToggle">Shopping Mode</label>
            <input type="checkbox" data-role="flipswitch" name="flip-checkbox-4" id="flip-checkbox-4" checked=""><br>
            <label for="merge">Merge List</label>
        </ul>
    </div>
</div>
</div>



<script>
    function newItemField() {
    let item = document.createElement("div")
    let list = document.getElementById("groceryList")
    list.appendChild(item)
    var fields = ["Name", "Quantity", "Units", "Notes(Optional)"]
    var i

    for(i=0; i <fields.length; i++) {
        input = document.createElement("input")
        input.setAttribute("type", "text")
        input.id = fields[i]
        input.classList = "textInput"
        label = document.createElement("label")
        label.innerHTML = fields[i]
        item.appendChild(label)
        item.appendChild(input)
    }
        addButton = document.createElement("button")
        addButton.innerHTML = "Add"
        addButton.id = "addButton"
        item.appendChild(addButton)
        addButton.onclick = addItemDetails(item)
    }

document.getElementById("newItem").onclick = newItemField
//addItemDetails is buggy, only changes every other element for some reason
    function addItemDetails(item) {
        return function() {
            var fields = item.getElementsByClassName("textInput")
            var i

            for (i=0; i<fields.length; i++) {
                this.classList.toggle("text")
                input = fields[i]
                inputData = input.value
                inputText = document.createElement("p")
                inputText.innerHTML = inputData
                item.replaceChild(inputText, input)
            }
        }
    }
    
    //     editButton = document.createElement("button")
    //     editButton.innerHTML = "Edit"
    //     item.appendChild(editButton)
    //     editButton.id = "edit"
    //  }

    // document.getElementById("newItem").onclick = newItemField

    // function addItemDetails(item, name, qty, units, notes){
    //     return function() {
    //     inputtedName = name.value
    //     nameText = document.createElement("p")
    //     item.replaceChild(nameText, name)
    //     nameText.innerHTML = inputtedName
    //     inputtedQty = qty.value
    //     qtyText = document.createElement("p")
    //     item.replaceChild(qtyText, qty)
    //     qtyText.innerHTML = inputtedQty
    //     inputtedUnits = units.value
    //     unitText = document.createElement("p")
    //     item.replaceChild(unitText, units)
    //     unitText.innerHTML = inputtedUnits
    //     inputtedNotes = notes.value
    //     notesText = document.createElement("p")
    //     item.replaceChild(notesText, notes)
    //     notesText.innerHTML = inputtedNotes
    //     document.getElementById("edit").onclick = edit(item, nameText, qtyText, unitText, notesText)
        
    // }

    // function saveChanges(item, name, qty, units, notes) {
    //     return function() {
    //         inputtedName = name.value
    //         nameText = document.createElement("p")
    //         item.replaceChild(nameText, name)
    //         nameText.innerHTML = inputtedName
    //         inputtedQty = qty.value
    //         qtyText = document.createElement("p")
    //         item.replaceChild(qtyText, qty)
    //         qtyText.innerHTML = inputtedQty
    //         inputtedUnits = units.value
    //         unitText = document.createElement("p")
    //         item.replaceChild(unitText, units)
    //         unitText.innerHTML = inputtedUnits
    //         inputtedNotes = notes.value
    //         notesText = document.createElement("p")
    //         item.replaceChild(notesText, notes)
    //         notesText.innerHTML = inputtedNotes
    //         }
    //     }
    
    
    

    // function edit(item, name, qty, units, notes){
    //     return function() {
    //     currentName = name.innerHTML
    //     nameInput = document.createElement("input")
    //     nameInput.value = currentName
    //     item.replaceChild(nameInput, name)
    //     currentQty = qty.innerHTML
    //     qtyInput = document.createElement("input")
    //     qtyInput.value = currentQty
    //     item.replaceChild(qtyInput, qty)
    //     currentUnits = units.innerHTML
    //     unitsInput = document.createElement("input")
    //     unitsInput.value = currentUnits
    //     item.replaceChild(unitsInput, units)
    //     currentNotes = notes.innerHTML
    //     notesInput = document.createElement("input")
    //     notesInput.value = currentNotes
    //     item.replaceChild(notesInput, notes)
    //     saveChangesButton = document.createElement("button")
    //     saveChangesButton.innerHTML = "Save Changes"
    //     addButton = document.getElementById("addButton")
    //     item.replaceChild(saveChangesButton, addButton)
    //     saveChangesButton.onclick = saveChanges(item, nameInput, qtyInput, unitsInput, notesInput )
    // }
    // }
    // }
    
    function collapse() {
        var coll = document.getElementsByClassName("collapsible");
        var i;

        for (i = 0; i < coll.length; i++) {
        coll[i].onclick = function() {
        this.classList.toggle("active");
        var content = this.nextElementSibling;
        if (content.style.display === "block") {
        content.style.display = "none";
        } else {
        content.style.display = "block";
    }
  };
}
    }


    collapse()

      
</script>
<!-- the sidebar is to be included as well. -->